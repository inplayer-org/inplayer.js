{
    "project": {},
    "files": {
        "Models\\Asset.js": {
            "name": "Models\\Asset.js",
            "modules": {},
            "classes": {
                "Asset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Models\\Payment.js": {
            "name": "Models\\Payment.js",
            "modules": {},
            "classes": {
                "Payment": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Asset": {
            "name": "Asset",
            "shortname": "Asset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Models\\Asset.js",
            "line": 5,
            "description": "Contains all Requests connected with assets/items"
        },
        "Payment": {
            "name": "Payment",
            "shortname": "Payment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Models\\Payment.js",
            "line": 5,
            "description": "Contains all Requests connected with payments"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "Models\\Asset.js",
            "line": 12,
            "description": "Checks whether a given authenticated user has access for an asset",
            "itemtype": "method",
            "name": "checkAccessForAsset",
            "async": 1,
            "params": [
                {
                    "name": "token",
                    "description": "- The Authorization token",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- The id of the asset",
                    "type": "Number"
                }
            ],
            "example": [
                "\nInPlayer.Asset.checkAccessForAsset('eyJ0eXAiOiJKPECENR5Y',36320)\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Asset"
        },
        {
            "file": "Models\\Asset.js",
            "line": 40,
            "description": "Checks whether a given authenticated user has access for an array of assets",
            "itemtype": "method",
            "name": "checkAccessForMultipleAssets",
            "async": 1,
            "params": [
                {
                    "name": "token",
                    "description": "- The Authorization token",
                    "type": "String"
                },
                {
                    "name": "ids",
                    "description": "- Array with asset ids",
                    "type": "Array"
                }
            ],
            "example": [
                "\nInPlayer.Asset.checkAccessForMultipleAssets('eyJ0eXAiOiJKPECENR5Y',[36320,27215])\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Asset"
        },
        {
            "file": "Models\\Asset.js",
            "line": 67,
            "description": "Get the asset info for a given asset ID and merchant UUID",
            "itemtype": "method",
            "name": "findAsset",
            "async": 1,
            "params": [
                {
                    "name": "assetId",
                    "description": "- The ID of the asset",
                    "type": "Numer"
                },
                {
                    "name": "merchant_uuid",
                    "description": "- The merchant UUID string",
                    "type": "String"
                }
            ],
            "example": [
                "\nInPlayer.Asset.findAsset(2,'a1f13-dd1dfh-rfh123-dhd1hd-fahh1dl')\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Asset"
        },
        {
            "file": "Models\\Asset.js",
            "line": 92,
            "description": "Get an external assets' info",
            "itemtype": "method",
            "name": "findExternalAsset",
            "async": 1,
            "params": [
                {
                    "name": "assetType",
                    "description": "- The type ID of the asset",
                    "type": "Numer"
                },
                {
                    "name": "externalId",
                    "description": "- The ID of the external asset",
                    "type": "Number"
                }
            ],
            "example": [
                "\nInPlayer.Asset.findExternalAsset(2,44237)\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Asset"
        },
        {
            "file": "Models\\Asset.js",
            "line": 117,
            "description": "Get package info for a given Package ID",
            "itemtype": "method",
            "name": "findPackage",
            "async": 1,
            "params": [
                {
                    "name": "id",
                    "description": "- The type ID of the package",
                    "type": "Numer"
                }
            ],
            "example": [
                "\nInPlayer.Asset.findPackage(4444)\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Asset"
        },
        {
            "file": "Models\\Asset.js",
            "line": 141,
            "description": "Get the access fees for a given asset ID",
            "itemtype": "method",
            "name": "getAssetAccessFees",
            "async": 1,
            "params": [
                {
                    "name": "id",
                    "description": "- The ID of the asset",
                    "type": "Numer"
                }
            ],
            "example": [
                "\nInPlayer.Asset.getAssetAccessFees(555)\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Asset"
        },
        {
            "file": "Models\\Asset.js",
            "line": 165,
            "description": "Get the freemium asset data",
            "itemtype": "method",
            "name": "getAssetAccessFees",
            "async": 1,
            "params": [
                {
                    "name": "token",
                    "description": "- The authorization token",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- {}",
                    "type": "Object"
                }
            ],
            "example": [
                "\nInPlayer.Asset.freemiumAsset('uoifhadafefbad1312nfuqd123', {})\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Asset"
        },
        {
            "file": "Models\\Payment.js",
            "line": 12,
            "description": "Get all payment methods for a User",
            "itemtype": "method",
            "name": "getPaymentMethods",
            "async": 1,
            "params": [
                {
                    "name": "token",
                    "description": "- The Autorization token",
                    "type": "String"
                }
            ],
            "example": [
                "\nInPlayer.Payment.getPaymentMethods('aehfawfeikuehdjkc482rijfg47idqwk3n4')\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Payment"
        },
        {
            "file": "Models\\Payment.js",
            "line": 38,
            "description": "Get the payment tools for an aothorization token and payment method ID",
            "itemtype": "method",
            "name": "getPaymentTools",
            "async": 1,
            "params": [
                {
                    "name": "token",
                    "description": "- The Authorization token",
                    "type": "String"
                },
                {
                    "name": "paymentMethodId",
                    "description": "- The Payment Method ID",
                    "type": "Number"
                }
            ],
            "example": [
                "\nInPlayer.Payment.getPaymentTools('dajh8ao8djadd2o8jh2ofkhdhqkgog3oj', 2)\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Payment"
        },
        {
            "file": "Models\\Payment.js",
            "line": 65,
            "description": "Makes a Payment for a given Authorization token + asset/payment details",
            "itemtype": "method",
            "name": "payForAsset",
            "async": 1,
            "params": [
                {
                    "name": "token",
                    "description": "- The Authorization token",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- Payment data",
                    "type": "Object"
                }
            ],
            "example": [
                "\n// data.payment_method = { id.... }\nInPlayer.Payment.getPaymentTools('dajh8ao8djadd2o8jh2ofkhdhqkgog3oj', {\n number: 4111111111111111,\n card_name: 'PayPal',\n exp_month: 10,\n exp_year: 2030,\n cvv: 656,\n access_fee: 2341,\n payment_method: 1,\n referrer: 'http://google.com'\n})\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Payment"
        },
        {
            "file": "Models\\Payment.js",
            "line": 105,
            "description": "Gets parameters for PayPal",
            "itemtype": "method",
            "name": "getPayPalParams",
            "async": 1,
            "params": [
                {
                    "name": "token",
                    "description": "- The Authorization token",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- Contains details",
                    "type": "Object"
                }
            ],
            "example": [
                "\nInPlayer.Payment.getPayPalParams('dajh8ao8djadd2o8jh2ofkhdhqkgog3oj', {})\n.then(data => console.log(data));"
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Payment"
        }
    ],
    "warnings": []
}